{"name":"Lunadht","tagline":"Your general purpose DHT","body":"# LunaDHT\r\n\r\nYour general purpose distributed-hash-table (DHT) accessible via DBus.\r\n\r\n## Installation\r\n\r\n    git clone https://github.com/manuels/lunadht.git\r\n    cd lunadht\r\n    git submodule update --init --recursive\r\n    cd libcage\r\n    omake .\r\n    make\r\n    cd ..\r\n    make\r\n    \r\n    XDG_DATA_DIRS=. ./lunadhtd\r\n    \r\n\r\n## Security\r\n\r\nLunaDHT is a young software project and it might be vulnerable to attacks.\r\nDespite potential software bugs, distributed hash tables suffer from these flaws:\r\n\r\n- Anyone can read what you put into the DHT\r\n- An attacker might give manipulated values stored for a key\r\n- An attacker might not give any values stored for a key, although you stored a value for it\r\n\r\n## Demo\r\n\r\nStart the LunaDHT daemon\r\n\r\n    $ XDG_DATA_DIRS=. ./lunadhtd &\r\n\r\nThen store something in the DHT\r\n    \r\n    # Usage: ./demo_put.py <app_id> <key> <value>\r\n    $ ./demo_put.py 4321 \"What is the answer to the great question, of life, the universe and everything?\" \"42\"\r\n\r\nand try to get it again\r\n\r\n    # Usage: ./demo_get.py <app_id> <key>\r\n    $ ./demo_get.py 4321 \"What is the answer to the great question, of life, the universe and everything?\"\r\n    42\r\n\r\nYou can store values up to 924 bytes.\r\n\r\n## DBus API\r\n\r\nBus name: `org.manuel.LunaDHT`\r\n\r\nPath: `org/manuel/LunaDHT`\r\n\r\nInterface: `org.manuel.LunaDHT`\r\n\r\n### Methods\r\n\r\nYou can choose your `app_id` freely but make sure you use the same value for it on all machines. Its purpose is to minimize conflicting key-value pairs between applications.\r\n\r\n    put(uint32 api_id, char* key, char* value, int64 ttl)\r\nStore `value` under `key` with a time-to-live of `ttl` in seconds.\r\n\r\n    get(uint32 api_id, char* key) -> array of char* values\r\nGet `values` stored under `key`\r\n    \r\n    join(char *host, uint16 port)\r\nJoin the DHT network using the node at `host:port`\r\n\r\n## Bootstrapping Nodes\r\nCurrently I am running a single bootstrapping node (see nodes.gschema.xml for IPv4/v6 addresses). It is used by default so you don't have to call `join` for it.\r\nIf you would like to support the LunaDHT network by running your own bootstrapping node, drop me a mail.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}